/**
 * The Selling Partner API for CustomerFeedback
 * The Selling Partner API for Customer Feedback (Customer Feedback API) provides information about customer reviews and returns at both the item and browse node level.
 *
 * The version of the OpenAPI document: 2024-06-01
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import { ApiClient } from '../ApiClient.js'
import { BrowseNodeReviewTopicMetrics } from './BrowseNodeReviewTopicMetrics.js'
import { BrowseNodeSubtopic } from './BrowseNodeSubtopic.js'

/**
 * The BrowseNodeReviewTopic model module.
 * @module customerFeedback_2024_06_01/model/BrowseNodeReviewTopic
 * @version 2024-06-01
 */
export class BrowseNodeReviewTopic {
  /**
   * Constructs a new <code>BrowseNodeReviewTopic</code>.
   * The browse node review topic.
   * @alias module:customerFeedback_2024_06_01/model/BrowseNodeReviewTopic
   * @class
   * @param topic {String} The name browse node review topic.
   * @param browseNodeMetrics {BrowseNodeReviewTopicMetrics}
   */
  constructor (topic, browseNodeMetrics) {
    this.topic = topic
    this.browseNodeMetrics = browseNodeMetrics
  }

  /**
   * Constructs a <code>BrowseNodeReviewTopic</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {BrowseNodeReviewTopic} obj Optional instance to populate.
   * @return {BrowseNodeReviewTopic} The populated <code>BrowseNodeReviewTopic</code> instance.
   */
  static constructFromObject (data, obj) {
    if (data) {
      switch (typeof data) {
        case 'string':
          obj = String(data)
          break
        case 'number':
          obj = Number(data)
          break
        case 'boolean':
          obj = Boolean(data)
          break
      }
      obj = obj || new BrowseNodeReviewTopic()
      if (data.hasOwnProperty('topic')) { obj.topic = ApiClient.convertToType(data.topic, 'String') }
      if (data.hasOwnProperty('browseNodeMetrics')) { obj.browseNodeMetrics = BrowseNodeReviewTopicMetrics.constructFromObject(data.browseNodeMetrics) }
      if (data.hasOwnProperty('reviewSnippets')) { obj.reviewSnippets = ApiClient.convertToType(data.reviewSnippets, ['String']) }
      if (data.hasOwnProperty('subtopics')) { obj.subtopics = ApiClient.convertToType(data.subtopics, [BrowseNodeSubtopic]) }
    }
    return obj
  }
}

/**
 * The name browse node review topic.
 * @member {String} topic
 * @type {String}
 */
BrowseNodeReviewTopic.prototype.topic = undefined

/**
 * @member {BrowseNodeReviewTopicMetrics} browseNodeMetrics
 * @type {BrowseNodeReviewTopicMetrics}
 */
BrowseNodeReviewTopic.prototype.browseNodeMetrics = undefined

/**
 * A list of up to three snippets from reviews that contain the topic. This value is `null` if there aren't enough review snippets for the topic.
 * @member {[String]} reviewSnippets
 * @type {[String]}
 */
BrowseNodeReviewTopic.prototype.reviewSnippets = undefined

/**
 * A list of the five subtopics that occur most frequently. This value is `null` if there are no subtopics.
 * @member {[BrowseNodeSubtopic]} subtopics
 * @type {[BrowseNodeSubtopic]}
 */
BrowseNodeReviewTopic.prototype.subtopics = undefined
