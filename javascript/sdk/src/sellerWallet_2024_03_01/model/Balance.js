/**
 * The Selling Partner API for Amazon Seller Wallet Open Banking API
 * The Selling Partner API for Seller Wallet (Seller Wallet API) provides financial information that is relevant to a seller's Seller Wallet account. You can obtain financial events, balances, and transfer schedules for Seller Wallet accounts. You can also schedule and initiate transactions.
 *
 * The version of the OpenAPI document: 2024-03-01
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import { ApiClient } from '../ApiClient.js'
import { BalanceType } from './BalanceType.js'

/**
 * The Balance model module.
 * @module sellerWallet_2024_03_01/model/Balance
 * @version 2024-03-01
 */
export class Balance {
  /**
   * Constructs a new <code>Balance</code>.
   * Specifies the balance amount in the Amazon SW bank account
   * @alias module:sellerWallet_2024_03_01/model/Balance
   * @class
   * @param accountId {String} The unique identifier provided by Amazon to identify the account
   * @param balanceAmount {Number} A decimal number such as amount or FX rate.
   * @param balanceCurrency {String} The Amazon SW bank account currency code in ISO 4217 format
   * @param lastUpdateDate {Date} The last update date on the account balance
   */
  constructor (accountId, balanceAmount, balanceCurrency, lastUpdateDate) {
    this.accountId = accountId
    this.balanceAmount = balanceAmount
    this.balanceCurrency = balanceCurrency
    this.lastUpdateDate = lastUpdateDate
  }

  /**
   * Constructs a <code>Balance</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {Balance} obj Optional instance to populate.
   * @return {Balance} The populated <code>Balance</code> instance.
   */
  static constructFromObject (data, obj) {
    if (data) {
      switch (typeof data) {
        case 'string':
          obj = String(data)
          break
        case 'number':
          obj = Number(data)
          break
        case 'boolean':
          obj = Boolean(data)
          break
      }
      obj = obj || new Balance()
      if (data.hasOwnProperty('accountId')) { obj.accountId = ApiClient.convertToType(data.accountId, 'String') }
      if (data.hasOwnProperty('balanceType')) { obj.balanceType = BalanceType.constructFromObject(data.balanceType) }
      if (data.hasOwnProperty('balanceAmount')) { obj.balanceAmount = ApiClient.convertToType(data.balanceAmount, 'Number') }
      if (data.hasOwnProperty('balanceCurrency')) { obj.balanceCurrency = ApiClient.convertToType(data.balanceCurrency, 'String') }
      if (data.hasOwnProperty('lastUpdateDate')) { obj.lastUpdateDate = ApiClient.convertToType(data.lastUpdateDate, 'Date') }
    }
    return obj
  }
}

/**
 * The unique identifier provided by Amazon to identify the account
 * @member {String} accountId
 * @type {String}
 */
Balance.prototype.accountId = undefined

/**
 * @member {BalanceType} balanceType
 * @type {BalanceType}
 */
Balance.prototype.balanceType = undefined

/**
 * A decimal number such as amount or FX rate.
 * @member {Number} balanceAmount
 * @type {Number}
 */
Balance.prototype.balanceAmount = undefined

/**
 * The Amazon SW bank account currency code in ISO 4217 format
 * @member {String} balanceCurrency
 * @type {String}
 */
Balance.prototype.balanceCurrency = undefined

/**
 * The last update date on the account balance
 * @member {Date} lastUpdateDate
 * @type {Date}
 */
Balance.prototype.lastUpdateDate = undefined
