/**
 * The Selling Partner API for Amazon Seller Wallet Open Banking API
 * The Selling Partner API for Seller Wallet (Seller Wallet API) provides financial information that is relevant to a seller's Seller Wallet account. You can obtain financial events, balances, and transfer schedules for Seller Wallet accounts. You can also schedule and initiate transactions.
 *
 * The version of the OpenAPI document: 2024-03-01
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import { ApiClient } from '../ApiClient.js'
import { RateDirection } from './RateDirection.js'

/**
 * The FxRateDetails model module.
 * @module sellerWallet_2024_03_01/model/FxRateDetails
 * @version 2024-03-01
 */
export class FxRateDetails {
  /**
   * Constructs a new <code>FxRateDetails</code>.
   * Foreign exchange rate details displayed when transfer preview is requested.
   * @alias module:sellerWallet_2024_03_01/model/FxRateDetails
   * @class
   * @param fxRateId {String} Unique identifier assigned to the fees/foreign exchange Rate of a transaction.
   * @param baseRate {Number} A decimal number such as amount or FX rate.
   * @param effectiveFxRate {Number} A decimal number such as amount or FX rate.
   * @param rateDirection {RateDirection}
   */
  constructor (fxRateId, baseRate, effectiveFxRate, rateDirection) {
    this.fxRateId = fxRateId
    this.baseRate = baseRate
    this.effectiveFxRate = effectiveFxRate
    this.rateDirection = rateDirection
  }

  /**
   * Constructs a <code>FxRateDetails</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {FxRateDetails} obj Optional instance to populate.
   * @return {FxRateDetails} The populated <code>FxRateDetails</code> instance.
   */
  static constructFromObject (data, obj) {
    if (data) {
      switch (typeof data) {
        case 'string':
          obj = String(data)
          break
        case 'number':
          obj = Number(data)
          break
        case 'boolean':
          obj = Boolean(data)
          break
      }
      obj = obj || new FxRateDetails()
      if (data.hasOwnProperty('fxRateId')) { obj.fxRateId = ApiClient.convertToType(data.fxRateId, 'String') }
      if (data.hasOwnProperty('baseRate')) { obj.baseRate = ApiClient.convertToType(data.baseRate, 'Number') }
      if (data.hasOwnProperty('effectiveFxRate')) { obj.effectiveFxRate = ApiClient.convertToType(data.effectiveFxRate, 'Number') }
      if (data.hasOwnProperty('rateDirection')) { obj.rateDirection = RateDirection.constructFromObject(data.rateDirection) }
    }
    return obj
  }
}

/**
 * Unique identifier assigned to the fees/foreign exchange Rate of a transaction.
 * @member {String} fxRateId
 * @type {String}
 */
FxRateDetails.prototype.fxRateId = undefined

/**
 * A decimal number such as amount or FX rate.
 * @member {Number} baseRate
 * @type {Number}
 */
FxRateDetails.prototype.baseRate = undefined

/**
 * A decimal number such as amount or FX rate.
 * @member {Number} effectiveFxRate
 * @type {Number}
 */
FxRateDetails.prototype.effectiveFxRate = undefined

/**
 * @member {RateDirection} rateDirection
 * @type {RateDirection}
 */
FxRateDetails.prototype.rateDirection = undefined
