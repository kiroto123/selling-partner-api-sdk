/**
 * The Selling Partner API for Amazon Seller Wallet Open Banking API
 * The Selling Partner API for Seller Wallet (Seller Wallet API) provides financial information that is relevant to a seller's Seller Wallet account. You can obtain financial events, balances, and transfer schedules for Seller Wallet accounts. You can also schedule and initiate transactions.
 *
 * The version of the OpenAPI document: 2024-03-01
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import { ApiClient } from '../ApiClient.js'

/**
 * The AccountHolderAddress model module.
 * @module sellerWallet_2024_03_01/model/AccountHolderAddress
 * @version 2024-03-01
 */
export class AccountHolderAddress {
  /**
   * Constructs a new <code>AccountHolderAddress</code>.
   * Address for bank account verification of the Payee. For example, this can be a person or business mailing address
   * @alias module:sellerWallet_2024_03_01/model/AccountHolderAddress
   * @class
   * @param addressLine1 {String} Address Line 1 of the public address
   * @param city {String} City name of the public address
   * @param state {String} State name of the public address. This is the state or region for China-based addresses.
   * @param postalCode {String} Postal code of the public address
   * @param countryCode {String} The two digit country code, in ISO 3166 format.
   */
  constructor (addressLine1, city, state, postalCode, countryCode) {
    this.addressLine1 = addressLine1
    this.city = city
    this.state = state
    this.postalCode = postalCode
    this.countryCode = countryCode
  }

  /**
   * Constructs a <code>AccountHolderAddress</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {AccountHolderAddress} obj Optional instance to populate.
   * @return {AccountHolderAddress} The populated <code>AccountHolderAddress</code> instance.
   */
  static constructFromObject (data, obj) {
    if (data) {
      switch (typeof data) {
        case 'string':
          obj = String(data)
          break
        case 'number':
          obj = Number(data)
          break
        case 'boolean':
          obj = Boolean(data)
          break
      }
      obj = obj || new AccountHolderAddress()
      if (data.hasOwnProperty('addressLine1')) { obj.addressLine1 = ApiClient.convertToType(data.addressLine1, 'String') }
      if (data.hasOwnProperty('addressLine2')) { obj.addressLine2 = ApiClient.convertToType(data.addressLine2, 'String') }
      if (data.hasOwnProperty('city')) { obj.city = ApiClient.convertToType(data.city, 'String') }
      if (data.hasOwnProperty('state')) { obj.state = ApiClient.convertToType(data.state, 'String') }
      if (data.hasOwnProperty('postalCode')) { obj.postalCode = ApiClient.convertToType(data.postalCode, 'String') }
      if (data.hasOwnProperty('country')) { obj.country = ApiClient.convertToType(data.country, 'String') }
      if (data.hasOwnProperty('countryCode')) { obj.countryCode = ApiClient.convertToType(data.countryCode, 'String') }
    }
    return obj
  }
}

/**
 * Address Line 1 of the public address
 * @member {String} addressLine1
 * @type {String}
 */
AccountHolderAddress.prototype.addressLine1 = undefined

/**
 * Address Line 2 of the public address
 * @member {String} addressLine2
 * @type {String}
 */
AccountHolderAddress.prototype.addressLine2 = undefined

/**
 * City name of the public address
 * @member {String} city
 * @type {String}
 */
AccountHolderAddress.prototype.city = undefined

/**
 * State name of the public address. This is the state or region for China-based addresses.
 * @member {String} state
 * @type {String}
 */
AccountHolderAddress.prototype.state = undefined

/**
 * Postal code of the public address
 * @member {String} postalCode
 * @type {String}
 */
AccountHolderAddress.prototype.postalCode = undefined

/**
 * Country name of the public address
 * @member {String} country
 * @type {String}
 */
AccountHolderAddress.prototype.country = undefined

/**
 * The two digit country code, in ISO 3166 format.
 * @member {String} countryCode
 * @type {String}
 */
AccountHolderAddress.prototype.countryCode = undefined
