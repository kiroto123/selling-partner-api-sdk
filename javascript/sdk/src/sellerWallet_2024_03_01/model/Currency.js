/**
 * The Selling Partner API for Amazon Seller Wallet Open Banking API
 * The Selling Partner API for Seller Wallet (Seller Wallet API) provides financial information that is relevant to a seller's Seller Wallet account. You can obtain financial events, balances, and transfer schedules for Seller Wallet accounts. You can also schedule and initiate transactions.
 *
 * The version of the OpenAPI document: 2024-03-01
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import { ApiClient } from '../ApiClient.js'

/**
 * The Currency model module.
 * @module sellerWallet_2024_03_01/model/Currency
 * @version 2024-03-01
 */
export class Currency {
  /**
   * Constructs a new <code>Currency</code>.
   * A currency type and amount.
   * @alias module:sellerWallet_2024_03_01/model/Currency
   * @class
   */
  constructor () {
  }

  /**
   * Constructs a <code>Currency</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {Currency} obj Optional instance to populate.
   * @return {Currency} The populated <code>Currency</code> instance.
   */
  static constructFromObject (data, obj) {
    if (data) {
      switch (typeof data) {
        case 'string':
          obj = String(data)
          break
        case 'number':
          obj = Number(data)
          break
        case 'boolean':
          obj = Boolean(data)
          break
      }
      obj = obj || new Currency()
      if (data.hasOwnProperty('currencyCode')) { obj.currencyCode = ApiClient.convertToType(data.currencyCode, 'String') }
      if (data.hasOwnProperty('currencyAmount')) { obj.currencyAmount = ApiClient.convertToType(data.currencyAmount, 'Number') }
    }
    return obj
  }
}

/**
 * The three-digit currency code in ISO 4217 format.
 * @member {String} currencyCode
 * @type {String}
 */
Currency.prototype.currencyCode = undefined

/**
 * A decimal number such as amount or FX rate.
 * @member {Number} currencyAmount
 * @type {Number}
 */
Currency.prototype.currencyAmount = undefined
