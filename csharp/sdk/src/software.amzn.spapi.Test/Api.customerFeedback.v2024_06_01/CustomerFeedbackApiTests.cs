/*
 * The Selling Partner API for CustomerFeedback
 *
 * The Selling Partner API for Customer Feedback (Customer Feedback API) provides information about customer reviews and returns at both the item and browse node level.
 *
 * The version of the OpenAPI document: 2024-06-01
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;
using software.amzn.spapi.Auth;

using software.amzn.spapi.Client;
using software.amzn.spapi.Api.customerFeedback.v2024_06_01;
using software.amzn.spapi.Model.customerFeedback.v2024_06_01;

namespace software.amzn.spapi.Api.customerFeedback.v2024_06_01.Test
{
    /// <summary>
    ///  Class for testing CustomerFeedbackApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class CustomerFeedbackApiTests
    {
        private CustomerFeedbackApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        public void Init()
        {
            // TODO uncomment below to initialize instance for testing
            //instance = new CustomerFeedbackApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of CustomerFeedbackApi
        /// </summary>
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' CustomerFeedbackApi
            //Assert.IsInstanceOfType(typeof(CustomerFeedbackApi), instance, "instance is a CustomerFeedbackApi");
        }

        
        /// <summary>
        /// Test GetBrowseNodeReturnTopics
        /// </summary>
        [Fact]
        public void GetBrowseNodeReturnTopicsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string browseNodeId = null;
            //string marketplaceId = null;
            //var response = instance.GetBrowseNodeReturnTopics(browseNodeIdmarketplaceId);
            //Assert.IsInstanceOf<BrowseNodeReturnTopicsResponse> (response, "response is BrowseNodeReturnTopicsResponse");
        }
        
        /// <summary>
        /// Test GetBrowseNodeReturnTrends
        /// </summary>
        [Fact]
        public void GetBrowseNodeReturnTrendsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string browseNodeId = null;
            //string marketplaceId = null;
            //var response = instance.GetBrowseNodeReturnTrends(browseNodeIdmarketplaceId);
            //Assert.IsInstanceOf<BrowseNodeReturnTrendsResponse> (response, "response is BrowseNodeReturnTrendsResponse");
        }
        
        /// <summary>
        /// Test GetBrowseNodeReviewTopics
        /// </summary>
        [Fact]
        public void GetBrowseNodeReviewTopicsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string browseNodeId = null;
            //string marketplaceId = null;
            //string sortBy = null;
            //var response = instance.GetBrowseNodeReviewTopics(browseNodeIdmarketplaceIdsortBy);
            //Assert.IsInstanceOf<BrowseNodeReviewTopicsResponse> (response, "response is BrowseNodeReviewTopicsResponse");
        }
        
        /// <summary>
        /// Test GetBrowseNodeReviewTrends
        /// </summary>
        [Fact]
        public void GetBrowseNodeReviewTrendsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string browseNodeId = null;
            //string marketplaceId = null;
            //var response = instance.GetBrowseNodeReviewTrends(browseNodeIdmarketplaceId);
            //Assert.IsInstanceOf<BrowseNodeReviewTrendsResponse> (response, "response is BrowseNodeReviewTrendsResponse");
        }
        
        /// <summary>
        /// Test GetItemBrowseNode
        /// </summary>
        [Fact]
        public void GetItemBrowseNodeTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string asin = null;
            //string marketplaceId = null;
            //var response = instance.GetItemBrowseNode(asinmarketplaceId);
            //Assert.IsInstanceOf<BrowseNodeResponse> (response, "response is BrowseNodeResponse");
        }
        
        /// <summary>
        /// Test GetItemReviewTopics
        /// </summary>
        [Fact]
        public void GetItemReviewTopicsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string asin = null;
            //string marketplaceId = null;
            //string sortBy = null;
            //var response = instance.GetItemReviewTopics(asinmarketplaceIdsortBy);
            //Assert.IsInstanceOf<ItemReviewTopicsResponse> (response, "response is ItemReviewTopicsResponse");
        }
        
        /// <summary>
        /// Test GetItemReviewTrends
        /// </summary>
        [Fact]
        public void GetItemReviewTrendsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string asin = null;
            //string marketplaceId = null;
            //var response = instance.GetItemReviewTrends(asinmarketplaceId);
            //Assert.IsInstanceOf<ItemReviewTrendsResponse> (response, "response is ItemReviewTrendsResponse");
        }
        
    }

}
