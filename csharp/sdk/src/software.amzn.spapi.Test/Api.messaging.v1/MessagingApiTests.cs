/*
 * Selling Partner API for Messaging
 *
 * With the Messaging API you can build applications that send messages to buyers. You can get a list of message types that are available for an order that you specify, then call an operation that sends a message to the buyer for that order. The Messaging API returns responses that are formed according to the <a href=https://tools.ietf.org/html/draft-kelly-json-hal-08>JSON Hypertext Application Language</a> (HAL) standard.
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;
using software.amzn.spapi.Auth;

using software.amzn.spapi.Client;
using software.amzn.spapi.Api.messaging.v1;
using software.amzn.spapi.Model.messaging.v1;

namespace software.amzn.spapi.Api.messaging.v1.Test
{
    /// <summary>
    ///  Class for testing MessagingApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class MessagingApiTests
    {
        private MessagingApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        public void Init()
        {
            // TODO uncomment below to initialize instance for testing
            //instance = new MessagingApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of MessagingApi
        /// </summary>
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' MessagingApi
            //Assert.IsInstanceOfType(typeof(MessagingApi), instance, "instance is a MessagingApi");
        }

        
        /// <summary>
        /// Test ConfirmCustomizationDetails
        /// </summary>
        [Fact]
        public void ConfirmCustomizationDetailsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string amazonOrderId = null;
            //List<string> marketplaceIds = null;
            //CreateConfirmCustomizationDetailsRequest body = null;
            //var response = instance.ConfirmCustomizationDetails(amazonOrderIdmarketplaceIdsbody);
            //Assert.IsInstanceOf<CreateConfirmCustomizationDetailsResponse> (response, "response is CreateConfirmCustomizationDetailsResponse");
        }
        
        /// <summary>
        /// Test CreateAmazonMotors
        /// </summary>
        [Fact]
        public void CreateAmazonMotorsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string amazonOrderId = null;
            //List<string> marketplaceIds = null;
            //CreateAmazonMotorsRequest body = null;
            //var response = instance.CreateAmazonMotors(amazonOrderIdmarketplaceIdsbody);
            //Assert.IsInstanceOf<CreateAmazonMotorsResponse> (response, "response is CreateAmazonMotorsResponse");
        }
        
        /// <summary>
        /// Test CreateConfirmDeliveryDetails
        /// </summary>
        [Fact]
        public void CreateConfirmDeliveryDetailsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string amazonOrderId = null;
            //List<string> marketplaceIds = null;
            //CreateConfirmDeliveryDetailsRequest body = null;
            //var response = instance.CreateConfirmDeliveryDetails(amazonOrderIdmarketplaceIdsbody);
            //Assert.IsInstanceOf<CreateConfirmDeliveryDetailsResponse> (response, "response is CreateConfirmDeliveryDetailsResponse");
        }
        
        /// <summary>
        /// Test CreateConfirmOrderDetails
        /// </summary>
        [Fact]
        public void CreateConfirmOrderDetailsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string amazonOrderId = null;
            //List<string> marketplaceIds = null;
            //CreateConfirmOrderDetailsRequest body = null;
            //var response = instance.CreateConfirmOrderDetails(amazonOrderIdmarketplaceIdsbody);
            //Assert.IsInstanceOf<CreateConfirmOrderDetailsResponse> (response, "response is CreateConfirmOrderDetailsResponse");
        }
        
        /// <summary>
        /// Test CreateConfirmServiceDetails
        /// </summary>
        [Fact]
        public void CreateConfirmServiceDetailsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string amazonOrderId = null;
            //List<string> marketplaceIds = null;
            //CreateConfirmServiceDetailsRequest body = null;
            //var response = instance.CreateConfirmServiceDetails(amazonOrderIdmarketplaceIdsbody);
            //Assert.IsInstanceOf<CreateConfirmServiceDetailsResponse> (response, "response is CreateConfirmServiceDetailsResponse");
        }
        
        /// <summary>
        /// Test CreateDigitalAccessKey
        /// </summary>
        [Fact]
        public void CreateDigitalAccessKeyTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string amazonOrderId = null;
            //List<string> marketplaceIds = null;
            //CreateDigitalAccessKeyRequest body = null;
            //var response = instance.CreateDigitalAccessKey(amazonOrderIdmarketplaceIdsbody);
            //Assert.IsInstanceOf<CreateDigitalAccessKeyResponse> (response, "response is CreateDigitalAccessKeyResponse");
        }
        
        /// <summary>
        /// Test CreateLegalDisclosure
        /// </summary>
        [Fact]
        public void CreateLegalDisclosureTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string amazonOrderId = null;
            //List<string> marketplaceIds = null;
            //CreateLegalDisclosureRequest body = null;
            //var response = instance.CreateLegalDisclosure(amazonOrderIdmarketplaceIdsbody);
            //Assert.IsInstanceOf<CreateLegalDisclosureResponse> (response, "response is CreateLegalDisclosureResponse");
        }
        
        /// <summary>
        /// Test CreateUnexpectedProblem
        /// </summary>
        [Fact]
        public void CreateUnexpectedProblemTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string amazonOrderId = null;
            //List<string> marketplaceIds = null;
            //CreateUnexpectedProblemRequest body = null;
            //var response = instance.CreateUnexpectedProblem(amazonOrderIdmarketplaceIdsbody);
            //Assert.IsInstanceOf<CreateUnexpectedProblemResponse> (response, "response is CreateUnexpectedProblemResponse");
        }
        
        /// <summary>
        /// Test CreateWarranty
        /// </summary>
        [Fact]
        public void CreateWarrantyTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string amazonOrderId = null;
            //List<string> marketplaceIds = null;
            //CreateWarrantyRequest body = null;
            //var response = instance.CreateWarranty(amazonOrderIdmarketplaceIdsbody);
            //Assert.IsInstanceOf<CreateWarrantyResponse> (response, "response is CreateWarrantyResponse");
        }
        
        /// <summary>
        /// Test GetAttributes
        /// </summary>
        [Fact]
        public void GetAttributesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string amazonOrderId = null;
            //List<string> marketplaceIds = null;
            //var response = instance.GetAttributes(amazonOrderIdmarketplaceIds);
            //Assert.IsInstanceOf<GetAttributesResponse> (response, "response is GetAttributesResponse");
        }
        
        /// <summary>
        /// Test GetMessagingActionsForOrder
        /// </summary>
        [Fact]
        public void GetMessagingActionsForOrderTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string amazonOrderId = null;
            //List<string> marketplaceIds = null;
            //var response = instance.GetMessagingActionsForOrder(amazonOrderIdmarketplaceIds);
            //Assert.IsInstanceOf<GetMessagingActionsForOrderResponse> (response, "response is GetMessagingActionsForOrderResponse");
        }
        
        /// <summary>
        /// Test SendInvoice
        /// </summary>
        [Fact]
        public void SendInvoiceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string amazonOrderId = null;
            //List<string> marketplaceIds = null;
            //InvoiceRequest body = null;
            //var response = instance.SendInvoice(amazonOrderIdmarketplaceIdsbody);
            //Assert.IsInstanceOf<InvoiceResponse> (response, "response is InvoiceResponse");
        }
        
    }

}
