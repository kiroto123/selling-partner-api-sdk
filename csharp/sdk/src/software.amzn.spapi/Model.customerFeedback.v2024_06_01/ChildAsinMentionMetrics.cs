/*
 * The Selling Partner API for CustomerFeedback
 *
 * The Selling Partner API for Customer Feedback (Customer Feedback API) provides information about customer reviews and returns at both the item and browse node level.
 *
 * The version of the OpenAPI document: 2024-06-01
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = software.amzn.spapi.Client.OpenAPIDateConverter;

namespace software.amzn.spapi.Model.customerFeedback.v2024_06_01
{
    /// <summary>
    /// The child ASIN review topic mention metrics.
    /// </summary>
    [DataContract(Name = "ChildAsinMentionMetrics")]
    public partial class ChildAsinMentionMetrics : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ChildAsinMentionMetrics" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected ChildAsinMentionMetrics() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="ChildAsinMentionMetrics" /> class.
        /// </summary>
        /// <param name="asin">The child ASIN of the requested item. (required).</param>
        /// <param name="numberOfMentions">The number of times reviews of the child ASIN mention the topic. (required).</param>
        public ChildAsinMentionMetrics(string asin = default(string), int numberOfMentions = default(int))
        {
            // to ensure "asin" is required (not null)
            if (asin == null)
            {
                throw new ArgumentNullException("asin is a required property for ChildAsinMentionMetrics and cannot be null");
            }
            this.Asin = asin;
            this.NumberOfMentions = numberOfMentions;
        }

        /// <summary>
        /// The child ASIN of the requested item.
        /// </summary>
        /// <value>The child ASIN of the requested item.</value>
        [DataMember(Name = "asin", IsRequired = true, EmitDefaultValue = true)]
        public string Asin { get; set; }

        /// <summary>
        /// The number of times reviews of the child ASIN mention the topic.
        /// </summary>
        /// <value>The number of times reviews of the child ASIN mention the topic.</value>
        [DataMember(Name = "numberOfMentions", IsRequired = true, EmitDefaultValue = true)]
        public int NumberOfMentions { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ChildAsinMentionMetrics {\n");
            sb.Append("  Asin: ").Append(Asin).Append("\n");
            sb.Append("  NumberOfMentions: ").Append(NumberOfMentions).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
