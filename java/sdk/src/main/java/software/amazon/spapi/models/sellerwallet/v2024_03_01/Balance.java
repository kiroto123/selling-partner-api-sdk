/*
 * The Selling Partner API for Amazon Seller Wallet Open Banking API
 * The Selling Partner API for Seller Wallet (Seller Wallet API) provides financial information that is relevant to a seller's Seller Wallet account. You can obtain financial events, balances, and transfer schedules for Seller Wallet accounts. You can also schedule and initiate transactions.
 *
 * OpenAPI spec version: 2024-03-01
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package software.amazon.spapi.models.sellerwallet.v2024_03_01;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;
import java.math.BigDecimal;
import java.time.OffsetDateTime;
import java.util.Objects;

/** The balance amount in the Amazon Seller Wallet bank account. */
@Schema(description = "The balance amount in the Amazon Seller Wallet bank account.")
public class Balance {
    @SerializedName("accountId")
    private String accountId = null;

    @SerializedName("balanceType")
    private BalanceType balanceType = null;

    @SerializedName("balanceAmount")
    private BigDecimal balanceAmount = null;

    @SerializedName("balanceCurrency")
    private String balanceCurrency = null;

    @SerializedName("lastUpdateDate")
    private OffsetDateTime lastUpdateDate = null;

    public Balance accountId(String accountId) {
        this.accountId = accountId;
        return this;
    }

    /**
     * The unique identifier provided by Amazon to identify the account.
     *
     * @return accountId
     */
    @Schema(
            example = "amzn1.account.AGUGL2EM3ZHYSRJWH2UCRPIM5JFQ",
            required = true,
            description = "The unique identifier provided by Amazon to identify the account.")
    public String getAccountId() {
        return accountId;
    }

    public void setAccountId(String accountId) {
        this.accountId = accountId;
    }

    public Balance balanceType(BalanceType balanceType) {
        this.balanceType = balanceType;
        return this;
    }

    /**
     * Get balanceType
     *
     * @return balanceType
     */
    @Schema(description = "")
    public BalanceType getBalanceType() {
        return balanceType;
    }

    public void setBalanceType(BalanceType balanceType) {
        this.balanceType = balanceType;
    }

    public Balance balanceAmount(BigDecimal balanceAmount) {
        this.balanceAmount = balanceAmount;
        return this;
    }

    /**
     * Get balanceAmount
     *
     * @return balanceAmount
     */
    @Schema(required = true, description = "")
    public BigDecimal getBalanceAmount() {
        return balanceAmount;
    }

    public void setBalanceAmount(BigDecimal balanceAmount) {
        this.balanceAmount = balanceAmount;
    }

    public Balance balanceCurrency(String balanceCurrency) {
        this.balanceCurrency = balanceCurrency;
        return this;
    }

    /**
     * The Amazon Seller Wallet bank account currency code in ISO 4217 format.
     *
     * @return balanceCurrency
     */
    @Schema(
            example = "USD",
            required = true,
            description = "The Amazon Seller Wallet bank account currency code in ISO 4217 format.")
    public String getBalanceCurrency() {
        return balanceCurrency;
    }

    public void setBalanceCurrency(String balanceCurrency) {
        this.balanceCurrency = balanceCurrency;
    }

    public Balance lastUpdateDate(OffsetDateTime lastUpdateDate) {
        this.lastUpdateDate = lastUpdateDate;
        return this;
    }

    /**
     * The date of the most recent account balance update.
     *
     * @return lastUpdateDate
     */
    @Schema(required = true, description = "The date of the most recent account balance update.")
    public OffsetDateTime getLastUpdateDate() {
        return lastUpdateDate;
    }

    public void setLastUpdateDate(OffsetDateTime lastUpdateDate) {
        this.lastUpdateDate = lastUpdateDate;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        Balance balance = (Balance) o;
        return Objects.equals(this.accountId, balance.accountId)
                && Objects.equals(this.balanceType, balance.balanceType)
                && Objects.equals(this.balanceAmount, balance.balanceAmount)
                && Objects.equals(this.balanceCurrency, balance.balanceCurrency)
                && Objects.equals(this.lastUpdateDate, balance.lastUpdateDate);
    }

    @Override
    public int hashCode() {
        return Objects.hash(accountId, balanceType, balanceAmount, balanceCurrency, lastUpdateDate);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class Balance {\n");

        sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
        sb.append("    balanceType: ").append(toIndentedString(balanceType)).append("\n");
        sb.append("    balanceAmount: ").append(toIndentedString(balanceAmount)).append("\n");
        sb.append("    balanceCurrency: ")
                .append(toIndentedString(balanceCurrency))
                .append("\n");
        sb.append("    lastUpdateDate: ")
                .append(toIndentedString(lastUpdateDate))
                .append("\n");
        sb.append("}");
        return sb.toString();
    }

    /** Convert the given object to string with each line indented by 4 spaces (except the first line). */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }
}
