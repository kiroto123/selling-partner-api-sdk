/*
 * The Selling Partner API for Amazon Seller Wallet Open Banking API
 * The Selling Partner API for Seller Wallet (Seller Wallet API) provides financial information that is relevant to a seller's Seller Wallet account. You can obtain financial events, balances, and transfer schedules for Seller Wallet accounts. You can also schedule and initiate transactions.
 *
 * OpenAPI spec version: 2024-03-01
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package software.amazon.spapi.models.sellerwallet.v2024_03_01;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;
import java.time.OffsetDateTime;
import java.util.Objects;

/** Specifies the balance amount in the Amazon SW bank account */
@Schema(description = "Specifies the balance amount in the Amazon SW bank account")
public class TransferScheduleFailures {
    @SerializedName("transferScheduleFailureDate")
    private OffsetDateTime transferScheduleFailureDate = null;

    @SerializedName("transferScheduleFailureReason")
    private String transferScheduleFailureReason = null;

    public TransferScheduleFailures transferScheduleFailureDate(OffsetDateTime transferScheduleFailureDate) {
        this.transferScheduleFailureDate = transferScheduleFailureDate;
        return this;
    }

    /**
     * The transfer schedule cancellation date
     *
     * @return transferScheduleFailureDate
     */
    @Schema(required = true, description = "The transfer schedule cancellation date ")
    public OffsetDateTime getTransferScheduleFailureDate() {
        return transferScheduleFailureDate;
    }

    public void setTransferScheduleFailureDate(OffsetDateTime transferScheduleFailureDate) {
        this.transferScheduleFailureDate = transferScheduleFailureDate;
    }

    public TransferScheduleFailures transferScheduleFailureReason(String transferScheduleFailureReason) {
        this.transferScheduleFailureReason = transferScheduleFailureReason;
        return this;
    }

    /**
     * The statement/reasoning listed for the cancellation of the transfer schedule
     *
     * @return transferScheduleFailureReason
     */
    @Schema(
            example = "INSUFFICIENT_BALANCE",
            required = true,
            description = "The statement/reasoning listed for the cancellation of the transfer schedule ")
    public String getTransferScheduleFailureReason() {
        return transferScheduleFailureReason;
    }

    public void setTransferScheduleFailureReason(String transferScheduleFailureReason) {
        this.transferScheduleFailureReason = transferScheduleFailureReason;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        TransferScheduleFailures transferScheduleFailures = (TransferScheduleFailures) o;
        return Objects.equals(this.transferScheduleFailureDate, transferScheduleFailures.transferScheduleFailureDate)
                && Objects.equals(
                        this.transferScheduleFailureReason, transferScheduleFailures.transferScheduleFailureReason);
    }

    @Override
    public int hashCode() {
        return Objects.hash(transferScheduleFailureDate, transferScheduleFailureReason);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class TransferScheduleFailures {\n");

        sb.append("    transferScheduleFailureDate: ")
                .append(toIndentedString(transferScheduleFailureDate))
                .append("\n");
        sb.append("    transferScheduleFailureReason: ")
                .append(toIndentedString(transferScheduleFailureReason))
                .append("\n");
        sb.append("}");
        return sb.toString();
    }

    /** Convert the given object to string with each line indented by 4 spaces (except the first line). */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }
}
