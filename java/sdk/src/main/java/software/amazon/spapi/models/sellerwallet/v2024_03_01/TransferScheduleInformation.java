/*
 * The Selling Partner API for Amazon Seller Wallet Open Banking API
 * The Selling Partner API for Seller Wallet (Seller Wallet API) provides financial information that is relevant to a seller's Seller Wallet account. You can obtain financial events, balances, and transfer schedules for Seller Wallet accounts. You can also schedule and initiate transactions.
 *
 * OpenAPI spec version: 2024-03-01
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package software.amazon.spapi.models.sellerwallet.v2024_03_01;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;
import java.time.OffsetDateTime;
import java.util.Objects;

/** Mandatory information for initiating a schedule transfer. */
@Schema(description = "Mandatory information for initiating a schedule transfer.")
public class TransferScheduleInformation {
    @SerializedName("scheduleStartDate")
    private OffsetDateTime scheduleStartDate = null;

    @SerializedName("scheduleEndDate")
    private OffsetDateTime scheduleEndDate = null;

    @SerializedName("scheduleExpression")
    private ScheduleExpression scheduleExpression = null;

    @SerializedName("scheduleType")
    private ScheduleTransferType scheduleType = null;

    public TransferScheduleInformation scheduleStartDate(OffsetDateTime scheduleStartDate) {
        this.scheduleStartDate = scheduleStartDate;
        return this;
    }

    /**
     * The start date of the scheduled transfer.
     *
     * @return scheduleStartDate
     */
    @Schema(example = "2024-03-01T00:00Z", description = "The start date of the scheduled transfer.")
    public OffsetDateTime getScheduleStartDate() {
        return scheduleStartDate;
    }

    public void setScheduleStartDate(OffsetDateTime scheduleStartDate) {
        this.scheduleStartDate = scheduleStartDate;
    }

    public TransferScheduleInformation scheduleEndDate(OffsetDateTime scheduleEndDate) {
        this.scheduleEndDate = scheduleEndDate;
        return this;
    }

    /**
     * The end date of the scheduled transfer.
     *
     * @return scheduleEndDate
     */
    @Schema(example = "2027-03-01T00:00Z", description = "The end date of the scheduled transfer.")
    public OffsetDateTime getScheduleEndDate() {
        return scheduleEndDate;
    }

    public void setScheduleEndDate(OffsetDateTime scheduleEndDate) {
        this.scheduleEndDate = scheduleEndDate;
    }

    public TransferScheduleInformation scheduleExpression(ScheduleExpression scheduleExpression) {
        this.scheduleExpression = scheduleExpression;
        return this;
    }

    /**
     * Get scheduleExpression
     *
     * @return scheduleExpression
     */
    @Schema(description = "")
    public ScheduleExpression getScheduleExpression() {
        return scheduleExpression;
    }

    public void setScheduleExpression(ScheduleExpression scheduleExpression) {
        this.scheduleExpression = scheduleExpression;
    }

    public TransferScheduleInformation scheduleType(ScheduleTransferType scheduleType) {
        this.scheduleType = scheduleType;
        return this;
    }

    /**
     * Get scheduleType
     *
     * @return scheduleType
     */
    @Schema(description = "")
    public ScheduleTransferType getScheduleType() {
        return scheduleType;
    }

    public void setScheduleType(ScheduleTransferType scheduleType) {
        this.scheduleType = scheduleType;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        TransferScheduleInformation transferScheduleInformation = (TransferScheduleInformation) o;
        return Objects.equals(this.scheduleStartDate, transferScheduleInformation.scheduleStartDate)
                && Objects.equals(this.scheduleEndDate, transferScheduleInformation.scheduleEndDate)
                && Objects.equals(this.scheduleExpression, transferScheduleInformation.scheduleExpression)
                && Objects.equals(this.scheduleType, transferScheduleInformation.scheduleType);
    }

    @Override
    public int hashCode() {
        return Objects.hash(scheduleStartDate, scheduleEndDate, scheduleExpression, scheduleType);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class TransferScheduleInformation {\n");

        sb.append("    scheduleStartDate: ")
                .append(toIndentedString(scheduleStartDate))
                .append("\n");
        sb.append("    scheduleEndDate: ")
                .append(toIndentedString(scheduleEndDate))
                .append("\n");
        sb.append("    scheduleExpression: ")
                .append(toIndentedString(scheduleExpression))
                .append("\n");
        sb.append("    scheduleType: ").append(toIndentedString(scheduleType)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /** Convert the given object to string with each line indented by 4 spaces (except the first line). */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }
}
