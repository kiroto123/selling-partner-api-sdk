/*
 * The Selling Partner API for Amazon Seller Wallet Open Banking API
 * The Selling Partner API for Seller Wallet (Seller Wallet API) provides financial information that is relevant to a seller's Seller Wallet account. You can obtain financial events, balances, and transfer schedules for Seller Wallet accounts. You can also schedule and initiate transactions.
 *
 * OpenAPI spec version: 2024-03-01
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package software.amazon.spapi.models.sellerwallet.v2024_03_01;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

/** Represents a format of a bank number also called routing number type */
@JsonAdapter(BankNumberFormat.Adapter.class)
public enum BankNumberFormat {
    @SerializedName("BIC")
    BIC("BIC"),
    @SerializedName("BASIC")
    BASIC("BASIC");

    private String value;

    BankNumberFormat(String value) {
        this.value = value;
    }

    public String getValue() {
        return value;
    }

    @Override
    public String toString() {
        return String.valueOf(value);
    }

    public static BankNumberFormat fromValue(String input) {
        for (BankNumberFormat b : BankNumberFormat.values()) {
            if (b.value.equals(input)) {
                return b;
            }
        }
        return null;
    }

    public static class Adapter extends TypeAdapter<BankNumberFormat> {
        @Override
        public void write(final JsonWriter jsonWriter, final BankNumberFormat enumeration) throws IOException {
            jsonWriter.value(String.valueOf(enumeration.getValue()));
        }

        @Override
        public BankNumberFormat read(final JsonReader jsonReader) throws IOException {
            Object value = jsonReader.nextString();
            return BankNumberFormat.fromValue((String) (value));
        }
    }
}
