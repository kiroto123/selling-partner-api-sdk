/*
 * The Selling Partner API for Amazon Seller Wallet Open Banking API
 * The Selling Partner API for Seller Wallet (Seller Wallet API) provides financial information that is relevant to a seller's Seller Wallet account. You can obtain financial events, balances, and transfer schedules for Seller Wallet accounts. You can also schedule and initiate transactions.
 *
 * OpenAPI spec version: 2024-03-01
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package software.amazon.spapi.models.sellerwallet.v2024_03_01;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.Objects;

/** Address for bank account verification of the Payee. For example, this can be a person or business mailing address */
@Schema(
        description =
                "Address for bank account verification of the Payee. For example, this can be a person or business mailing address ")
public class AccountHolderAddress {
    @SerializedName("addressLine1")
    private String addressLine1 = null;

    @SerializedName("addressLine2")
    private String addressLine2 = null;

    @SerializedName("city")
    private String city = null;

    @SerializedName("state")
    private String state = null;

    @SerializedName("postalCode")
    private String postalCode = null;

    @SerializedName("country")
    private String country = null;

    @SerializedName("countryCode")
    private String countryCode = null;

    public AccountHolderAddress addressLine1(String addressLine1) {
        this.addressLine1 = addressLine1;
        return this;
    }

    /**
     * Address Line 1 of the public address
     *
     * @return addressLine1
     */
    @Schema(example = "678 JFK Street", required = true, description = "Address Line 1 of the public address ")
    public String getAddressLine1() {
        return addressLine1;
    }

    public void setAddressLine1(String addressLine1) {
        this.addressLine1 = addressLine1;
    }

    public AccountHolderAddress addressLine2(String addressLine2) {
        this.addressLine2 = addressLine2;
        return this;
    }

    /**
     * Address Line 2 of the public address
     *
     * @return addressLine2
     */
    @Schema(example = "Unit 415", description = "Address Line 2 of the public address ")
    public String getAddressLine2() {
        return addressLine2;
    }

    public void setAddressLine2(String addressLine2) {
        this.addressLine2 = addressLine2;
    }

    public AccountHolderAddress city(String city) {
        this.city = city;
        return this;
    }

    /**
     * City name of the public address
     *
     * @return city
     */
    @Schema(example = "Seattle", required = true, description = "City name of the public address ")
    public String getCity() {
        return city;
    }

    public void setCity(String city) {
        this.city = city;
    }

    public AccountHolderAddress state(String state) {
        this.state = state;
        return this;
    }

    /**
     * State name of the public address. This is the state or region for China-based addresses.
     *
     * @return state
     */
    @Schema(
            example = "WA",
            required = true,
            description = "State name of the public address. This is the state or region for China-based addresses.")
    public String getState() {
        return state;
    }

    public void setState(String state) {
        this.state = state;
    }

    public AccountHolderAddress postalCode(String postalCode) {
        this.postalCode = postalCode;
        return this;
    }

    /**
     * Postal code of the public address
     *
     * @return postalCode
     */
    @Schema(example = "98109", required = true, description = "Postal code of the public address ")
    public String getPostalCode() {
        return postalCode;
    }

    public void setPostalCode(String postalCode) {
        this.postalCode = postalCode;
    }

    public AccountHolderAddress country(String country) {
        this.country = country;
        return this;
    }

    /**
     * Country name of the public address
     *
     * @return country
     */
    @Schema(example = "United States", description = "Country name of the public address ")
    public String getCountry() {
        return country;
    }

    public void setCountry(String country) {
        this.country = country;
    }

    public AccountHolderAddress countryCode(String countryCode) {
        this.countryCode = countryCode;
        return this;
    }

    /**
     * The two digit country code, in ISO 3166 format.
     *
     * @return countryCode
     */
    @Schema(example = "US", required = true, description = "The two digit country code, in ISO 3166 format. ")
    public String getCountryCode() {
        return countryCode;
    }

    public void setCountryCode(String countryCode) {
        this.countryCode = countryCode;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        AccountHolderAddress accountHolderAddress = (AccountHolderAddress) o;
        return Objects.equals(this.addressLine1, accountHolderAddress.addressLine1)
                && Objects.equals(this.addressLine2, accountHolderAddress.addressLine2)
                && Objects.equals(this.city, accountHolderAddress.city)
                && Objects.equals(this.state, accountHolderAddress.state)
                && Objects.equals(this.postalCode, accountHolderAddress.postalCode)
                && Objects.equals(this.country, accountHolderAddress.country)
                && Objects.equals(this.countryCode, accountHolderAddress.countryCode);
    }

    @Override
    public int hashCode() {
        return Objects.hash(addressLine1, addressLine2, city, state, postalCode, country, countryCode);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class AccountHolderAddress {\n");

        sb.append("    addressLine1: ").append(toIndentedString(addressLine1)).append("\n");
        sb.append("    addressLine2: ").append(toIndentedString(addressLine2)).append("\n");
        sb.append("    city: ").append(toIndentedString(city)).append("\n");
        sb.append("    state: ").append(toIndentedString(state)).append("\n");
        sb.append("    postalCode: ").append(toIndentedString(postalCode)).append("\n");
        sb.append("    country: ").append(toIndentedString(country)).append("\n");
        sb.append("    countryCode: ").append(toIndentedString(countryCode)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /** Convert the given object to string with each line indented by 4 spaces (except the first line). */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }
}
