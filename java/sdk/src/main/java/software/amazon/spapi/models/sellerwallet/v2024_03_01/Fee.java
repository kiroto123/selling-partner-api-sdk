/*
 * The Selling Partner API for Amazon Seller Wallet Open Banking API
 * The Selling Partner API for Seller Wallet (Seller Wallet API) provides financial information that is relevant to a seller's Seller Wallet account. You can obtain financial events, balances, and transfer schedules for Seller Wallet accounts. You can also schedule and initiate transactions.
 *
 * OpenAPI spec version: 2024-03-01
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package software.amazon.spapi.models.sellerwallet.v2024_03_01;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;
import java.math.BigDecimal;
import java.util.Objects;

/**
 * If the fees is in baseAmount (sourceAccount) currency, effectiveRate &#x3D; (baseAmount -
 * sum(fees.feeAmount.currencyAmount)) * baseRate) / baseAmount. If the fees is in transferAmount (destinationAccount)
 * currency, effectiveRate &#x3D; (( baseAmount * baseRate ) - sum(fees.feeAmount.currencyAmount )) / baseAmount
 */
@Schema(
        description =
                "If the fees is in baseAmount (sourceAccount) currency, effectiveRate =  (baseAmount - sum(fees.feeAmount.currencyAmount)) * baseRate) / baseAmount. If the fees is in transferAmount (destinationAccount) currency, effectiveRate =  (( baseAmount * baseRate ) -  sum(fees.feeAmount.currencyAmount )) / baseAmount ")
public class Fee {
    @SerializedName("feeId")
    private String feeId = null;

    @SerializedName("feeType")
    private FeeType feeType = null;

    @SerializedName("feeRateValue")
    private BigDecimal feeRateValue = null;

    @SerializedName("feeAmount")
    private Currency feeAmount = null;

    public Fee feeId(String feeId) {
        this.feeId = feeId;
        return this;
    }

    /**
     * Unique identifier assigned to the Fee.
     *
     * @return feeId
     */
    @Schema(required = true, description = "Unique identifier assigned to the Fee. ")
    public String getFeeId() {
        return feeId;
    }

    public void setFeeId(String feeId) {
        this.feeId = feeId;
    }

    public Fee feeType(FeeType feeType) {
        this.feeType = feeType;
        return this;
    }

    /**
     * Get feeType
     *
     * @return feeType
     */
    @Schema(required = true, description = "")
    public FeeType getFeeType() {
        return feeType;
    }

    public void setFeeType(FeeType feeType) {
        this.feeType = feeType;
    }

    public Fee feeRateValue(BigDecimal feeRateValue) {
        this.feeRateValue = feeRateValue;
        return this;
    }

    /**
     * Get feeRateValue
     *
     * @return feeRateValue
     */
    @Schema(required = true, description = "")
    public BigDecimal getFeeRateValue() {
        return feeRateValue;
    }

    public void setFeeRateValue(BigDecimal feeRateValue) {
        this.feeRateValue = feeRateValue;
    }

    public Fee feeAmount(Currency feeAmount) {
        this.feeAmount = feeAmount;
        return this;
    }

    /**
     * Get feeAmount
     *
     * @return feeAmount
     */
    @Schema(required = true, description = "")
    public Currency getFeeAmount() {
        return feeAmount;
    }

    public void setFeeAmount(Currency feeAmount) {
        this.feeAmount = feeAmount;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        Fee fee = (Fee) o;
        return Objects.equals(this.feeId, fee.feeId)
                && Objects.equals(this.feeType, fee.feeType)
                && Objects.equals(this.feeRateValue, fee.feeRateValue)
                && Objects.equals(this.feeAmount, fee.feeAmount);
    }

    @Override
    public int hashCode() {
        return Objects.hash(feeId, feeType, feeRateValue, feeAmount);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class Fee {\n");

        sb.append("    feeId: ").append(toIndentedString(feeId)).append("\n");
        sb.append("    feeType: ").append(toIndentedString(feeType)).append("\n");
        sb.append("    feeRateValue: ").append(toIndentedString(feeRateValue)).append("\n");
        sb.append("    feeAmount: ").append(toIndentedString(feeAmount)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /** Convert the given object to string with each line indented by 4 spaces (except the first line). */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }
}
