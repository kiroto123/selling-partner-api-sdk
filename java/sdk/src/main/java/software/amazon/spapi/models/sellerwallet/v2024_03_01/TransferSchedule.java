/*
 * The Selling Partner API for Amazon Seller Wallet Open Banking API
 * The Selling Partner API for Seller Wallet (Seller Wallet API) provides financial information that is relevant to a seller's Seller Wallet account. You can obtain financial events, balances, and transfer schedules for Seller Wallet accounts. You can also schedule and initiate transactions.
 *
 * OpenAPI spec version: 2024-03-01
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package software.amazon.spapi.models.sellerwallet.v2024_03_01;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/** Transfer schedule details and related historical details. */
@Schema(description = "Transfer schedule details and related historical details.")
public class TransferSchedule {
    @SerializedName("transferScheduleId")
    private String transferScheduleId = null;

    @SerializedName("transactionType")
    private TransactionType transactionType = null;

    @SerializedName("transactionSourceAccount")
    private TransactionAccount transactionSourceAccount = null;

    @SerializedName("transactionDestinationAccount")
    private TransactionAccount transactionDestinationAccount = null;

    @SerializedName("transferScheduleStatus")
    private TransferScheduleStatus transferScheduleStatus = null;

    @SerializedName("transferScheduleInformation")
    private TransferScheduleInformation transferScheduleInformation = null;

    @SerializedName("paymentPreference")
    private PaymentPreference paymentPreference = null;

    @SerializedName("transferScheduleFailures")
    private List<TransferScheduleFailures> transferScheduleFailures = new ArrayList<>();

    public TransferSchedule transferScheduleId(String transferScheduleId) {
        this.transferScheduleId = transferScheduleId;
        return this;
    }

    /**
     * The unique identifier provided by Amazon to the scheduled transfer
     *
     * @return transferScheduleId
     */
    @Schema(required = true, description = "The unique identifier provided by Amazon to the scheduled transfer ")
    public String getTransferScheduleId() {
        return transferScheduleId;
    }

    public void setTransferScheduleId(String transferScheduleId) {
        this.transferScheduleId = transferScheduleId;
    }

    public TransferSchedule transactionType(TransactionType transactionType) {
        this.transactionType = transactionType;
        return this;
    }

    /**
     * Get transactionType
     *
     * @return transactionType
     */
    @Schema(required = true, description = "")
    public TransactionType getTransactionType() {
        return transactionType;
    }

    public void setTransactionType(TransactionType transactionType) {
        this.transactionType = transactionType;
    }

    public TransferSchedule transactionSourceAccount(TransactionAccount transactionSourceAccount) {
        this.transactionSourceAccount = transactionSourceAccount;
        return this;
    }

    /**
     * Get transactionSourceAccount
     *
     * @return transactionSourceAccount
     */
    @Schema(description = "")
    public TransactionAccount getTransactionSourceAccount() {
        return transactionSourceAccount;
    }

    public void setTransactionSourceAccount(TransactionAccount transactionSourceAccount) {
        this.transactionSourceAccount = transactionSourceAccount;
    }

    public TransferSchedule transactionDestinationAccount(TransactionAccount transactionDestinationAccount) {
        this.transactionDestinationAccount = transactionDestinationAccount;
        return this;
    }

    /**
     * Get transactionDestinationAccount
     *
     * @return transactionDestinationAccount
     */
    @Schema(required = true, description = "")
    public TransactionAccount getTransactionDestinationAccount() {
        return transactionDestinationAccount;
    }

    public void setTransactionDestinationAccount(TransactionAccount transactionDestinationAccount) {
        this.transactionDestinationAccount = transactionDestinationAccount;
    }

    public TransferSchedule transferScheduleStatus(TransferScheduleStatus transferScheduleStatus) {
        this.transferScheduleStatus = transferScheduleStatus;
        return this;
    }

    /**
     * Get transferScheduleStatus
     *
     * @return transferScheduleStatus
     */
    @Schema(required = true, description = "")
    public TransferScheduleStatus getTransferScheduleStatus() {
        return transferScheduleStatus;
    }

    public void setTransferScheduleStatus(TransferScheduleStatus transferScheduleStatus) {
        this.transferScheduleStatus = transferScheduleStatus;
    }

    public TransferSchedule transferScheduleInformation(TransferScheduleInformation transferScheduleInformation) {
        this.transferScheduleInformation = transferScheduleInformation;
        return this;
    }

    /**
     * Get transferScheduleInformation
     *
     * @return transferScheduleInformation
     */
    @Schema(required = true, description = "")
    public TransferScheduleInformation getTransferScheduleInformation() {
        return transferScheduleInformation;
    }

    public void setTransferScheduleInformation(TransferScheduleInformation transferScheduleInformation) {
        this.transferScheduleInformation = transferScheduleInformation;
    }

    public TransferSchedule paymentPreference(PaymentPreference paymentPreference) {
        this.paymentPreference = paymentPreference;
        return this;
    }

    /**
     * Get paymentPreference
     *
     * @return paymentPreference
     */
    @Schema(description = "")
    public PaymentPreference getPaymentPreference() {
        return paymentPreference;
    }

    public void setPaymentPreference(PaymentPreference paymentPreference) {
        this.paymentPreference = paymentPreference;
    }

    public TransferSchedule transferScheduleFailures(List<TransferScheduleFailures> transferScheduleFailures) {
        this.transferScheduleFailures = transferScheduleFailures;
        return this;
    }

    public TransferSchedule addTransferScheduleFailuresItem(TransferScheduleFailures transferScheduleFailuresItem) {
        this.transferScheduleFailures.add(transferScheduleFailuresItem);
        return this;
    }

    /**
     * Collection that holds Transfer Schedules that has been cancelled or failed due to certain reasons.
     *
     * @return transferScheduleFailures
     */
    @Schema(
            required = true,
            description =
                    "Collection that holds Transfer Schedules that has been cancelled or failed due to certain reasons. ")
    public List<TransferScheduleFailures> getTransferScheduleFailures() {
        return transferScheduleFailures;
    }

    public void setTransferScheduleFailures(List<TransferScheduleFailures> transferScheduleFailures) {
        this.transferScheduleFailures = transferScheduleFailures;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        TransferSchedule transferSchedule = (TransferSchedule) o;
        return Objects.equals(this.transferScheduleId, transferSchedule.transferScheduleId)
                && Objects.equals(this.transactionType, transferSchedule.transactionType)
                && Objects.equals(this.transactionSourceAccount, transferSchedule.transactionSourceAccount)
                && Objects.equals(this.transactionDestinationAccount, transferSchedule.transactionDestinationAccount)
                && Objects.equals(this.transferScheduleStatus, transferSchedule.transferScheduleStatus)
                && Objects.equals(this.transferScheduleInformation, transferSchedule.transferScheduleInformation)
                && Objects.equals(this.paymentPreference, transferSchedule.paymentPreference)
                && Objects.equals(this.transferScheduleFailures, transferSchedule.transferScheduleFailures);
    }

    @Override
    public int hashCode() {
        return Objects.hash(
                transferScheduleId,
                transactionType,
                transactionSourceAccount,
                transactionDestinationAccount,
                transferScheduleStatus,
                transferScheduleInformation,
                paymentPreference,
                transferScheduleFailures);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class TransferSchedule {\n");

        sb.append("    transferScheduleId: ")
                .append(toIndentedString(transferScheduleId))
                .append("\n");
        sb.append("    transactionType: ")
                .append(toIndentedString(transactionType))
                .append("\n");
        sb.append("    transactionSourceAccount: ")
                .append(toIndentedString(transactionSourceAccount))
                .append("\n");
        sb.append("    transactionDestinationAccount: ")
                .append(toIndentedString(transactionDestinationAccount))
                .append("\n");
        sb.append("    transferScheduleStatus: ")
                .append(toIndentedString(transferScheduleStatus))
                .append("\n");
        sb.append("    transferScheduleInformation: ")
                .append(toIndentedString(transferScheduleInformation))
                .append("\n");
        sb.append("    paymentPreference: ")
                .append(toIndentedString(paymentPreference))
                .append("\n");
        sb.append("    transferScheduleFailures: ")
                .append(toIndentedString(transferScheduleFailures))
                .append("\n");
        sb.append("}");
        return sb.toString();
    }

    /** Convert the given object to string with each line indented by 4 spaces (except the first line). */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }
}
