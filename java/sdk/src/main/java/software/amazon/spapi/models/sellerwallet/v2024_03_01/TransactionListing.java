/*
 * The Selling Partner API for Amazon Seller Wallet Open Banking API
 * The Selling Partner API for Seller Wallet (Seller Wallet API) provides financial information that is relevant to a seller's Seller Wallet account. You can obtain financial events, balances, and transfer schedules for Seller Wallet accounts. You can also schedule and initiate transactions.
 *
 * OpenAPI spec version: 2024-03-01
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package software.amazon.spapi.models.sellerwallet.v2024_03_01;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/** Struct that holds collection of transactions. */
@Schema(description = "Struct that holds collection of transactions.")
public class TransactionListing {
    @SerializedName("nextPageToken")
    private String nextPageToken = null;

    @SerializedName("transactions")
    private List<Transaction> transactions = new ArrayList<>();

    public TransactionListing nextPageToken(String nextPageToken) {
        this.nextPageToken = nextPageToken;
        return this;
    }

    /**
     * If present, use this pagination token to retrieve the next page of supply sources, if not provided the API will
     * return same response. The field will only be provided when the list is greater than 100.
     *
     * @return nextPageToken
     */
    @Schema(
            example = "3493805734095308457308475",
            description =
                    "If present, use this pagination token to retrieve the next page of supply sources, if not provided the API will return same response. The field will only be provided when the list is greater than 100.")
    public String getNextPageToken() {
        return nextPageToken;
    }

    public void setNextPageToken(String nextPageToken) {
        this.nextPageToken = nextPageToken;
    }

    public TransactionListing transactions(List<Transaction> transactions) {
        this.transactions = transactions;
        return this;
    }

    public TransactionListing addTransactionsItem(Transaction transactionsItem) {
        this.transactions.add(transactionsItem);
        return this;
    }

    /**
     * Collection that holds Transaction
     *
     * @return transactions
     */
    @Schema(required = true, description = "Collection that holds Transaction ")
    public List<Transaction> getTransactions() {
        return transactions;
    }

    public void setTransactions(List<Transaction> transactions) {
        this.transactions = transactions;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        TransactionListing transactionListing = (TransactionListing) o;
        return Objects.equals(this.nextPageToken, transactionListing.nextPageToken)
                && Objects.equals(this.transactions, transactionListing.transactions);
    }

    @Override
    public int hashCode() {
        return Objects.hash(nextPageToken, transactions);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class TransactionListing {\n");

        sb.append("    nextPageToken: ").append(toIndentedString(nextPageToken)).append("\n");
        sb.append("    transactions: ").append(toIndentedString(transactions)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /** Convert the given object to string with each line indented by 4 spaces (except the first line). */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }
}
